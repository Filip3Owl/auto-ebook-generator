import streamlit as st
from langchain.llms import OpenAI
import sys
from pathlib import Path
from PIL import Image
import base64
import json
from datetime import datetime
import traceback
import time

# Configura paths para imports
sys.path.append(str(Path(__file__).parent))

# Importa√ß√µes locais
from core.prompts import EBOOK_PROMPTS
from agents.outline import create_outline_chain
from agents.writer import create_writing_chain
from utils.file_io import save_ebook
from utils.config import load_config

# Configura√ß√£o inicial
load_config()

def apply_dark_theme():
    """
    Aplica tema escuro personalizado para fundo preto
    """
    st.markdown("""
    <style>
        /* Reset e configura√ß√µes globais */
        .stApp {
            background-color: #0e1117;
            color: #ffffff;
        }
        
        /* Header personalizado */
        .main-header {
            font-size: 3.5em;
            font-weight: 800;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-align: center;
            margin: 20px 0;
            text-shadow: 0 0 30px rgba(102, 126, 234, 0.5);
        }
        
        .sub-header {
            font-size: 1.3em;
            color: #8b92a5;
            text-align: center;
            margin-bottom: 40px;
            font-weight: 300;
        }
        
        /* Sidebar styling */
        .css-1d391kg {
            background-color: #1a1d29;
            border-right: 2px solid #2d3748;
        }
        
        .sidebar .sidebar-content {
            background-color: #1a1d29;
            color: #ffffff;
        }
        
        /* Cards e containers */
        .custom-card {
            background: linear-gradient(145deg, #1e2139, #2d3748);
            border-radius: 15px;
            padding: 25px;
            margin: 20px 0;
            border: 1px solid #4a5568;
            box-shadow: 
                0 10px 30px rgba(0, 0, 0, 0.3),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
        }
        
        .feature-card {
            background: linear-gradient(135deg, #667eea15, #764ba215);
            border-radius: 12px;
            padding: 20px;
            margin: 15px 0;
            border: 1px solid #667eea40;
            transition: all 0.3s ease;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
            border-color: #667eea80;
        }
        
        /* Bot√µes personalizados */
        .stButton > button {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 25px;
            padding: 12px 30px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }
        
        .stButton > button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            background: linear-gradient(135deg, #5a6fd8, #6b42a0);
        }
        
        /* Form inputs */
        .stTextInput > div > div > input,
        .stTextArea > div > div > textarea,
        .stSelectbox > div > div > select {
            background-color: #2d3748;
            color: #ffffff;
            border: 2px solid #4a5568;
            border-radius: 10px;
            padding: 12px;
            transition: all 0.3s ease;
        }
        
        .stTextInput > div > div > input:focus,
        .stTextArea > div > div > textarea:focus,
        .stSelectbox > div > div > select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }
        
        /* Progress bar */
        .stProgress > div > div > div {
            background: linear-gradient(90deg, #667eea, #764ba2);
        }
        
        /* Success/Error messages */
        .stSuccess {
            background: linear-gradient(135deg, #10b981, #059669);
            border: none;
            border-radius: 10px;
            color: white;
        }
        
        .stError {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            border: none;
            border-radius: 10px;
            color: white;
        }
        
        .stWarning {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            border: none;
            border-radius: 10px;
            color: white;
        }
        
        .stInfo {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
            border: none;
            border-radius: 10px;
            color: white;
        }
        
        /* Expander styling */
        .streamlit-expanderHeader {
            background-color: #2d3748;
            border-radius: 10px;
            color: #ffffff;
            font-weight: 600;
        }
        
        .streamlit-expanderContent {
            background-color: #1a1d29;
            border-radius: 0 0 10px 10px;
        }
        
        /* Tabs styling */
        .stTabs [data-baseweb="tab-list"] {
            gap: 8px;
        }
        
        .stTabs [data-baseweb="tab"] {
            background-color: #2d3748;
            border-radius: 10px 10px 0 0;
            color: #8b92a5;
            font-weight: 600;
        }
        
        .stTabs [aria-selected="true"] {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }
        
        /* Slider customization */
        .stSlider > div > div > div > div {
            background: linear-gradient(90deg, #667eea, #764ba2);
        }
        
        /* Radio buttons */
        .stRadio > div {
            background-color: #2d3748;
            border-radius: 10px;
            padding: 15px;
        }
        
        /* Metrics styling */
        .metric-card {
            background: linear-gradient(145deg, #1e2139, #2d3748);
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            border: 1px solid #4a5568;
            margin: 10px 0;
        }
        
        .metric-value {
            font-size: 2.5em;
            font-weight: bold;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .metric-label {
            color: #8b92a5;
            font-size: 0.9em;
            margin-top: 5px;
        }
        
        /* Animation classes */
        .fade-in {
            animation: fadeInUp 0.8s ease-out;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Glassmorphism effect */
        .glass-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            padding: 25px;
            margin: 20px 0;
        }
        
        /* Loading spinner */
        .custom-spinner {
            border: 4px solid rgba(102, 126, 234, 0.3);
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* Scrollbar customization */
        ::-webkit-scrollbar {
            width: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #1a1d29;
        }
        
        ::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #5a6fd8, #6b42a0);
        }
    </style>
    """, unsafe_allow_html=True)

def create_header():
    """Cria o cabe√ßalho principal"""
    st.markdown("""
    <div class="fade-in">
        <div class="main-header">üìö EBook Generator Pro</div>
        <div class="sub-header">Transforme suas ideias em ebooks profissionais com intelig√™ncia artificial</div>
    </div>
    """, unsafe_allow_html=True)

def create_sidebar():
    """Cria a sidebar com configura√ß√µes"""
    with st.sidebar:
        # Logo e t√≠tulo da sidebar
        st.markdown("""
        <div style="text-align: center; padding: 20px 0;">
            <div style="font-size: 4em;">‚öôÔ∏è</div>
            <h2 style="color: #667eea; margin: 10px 0;">Configura√ß√µes</h2>
        </div>
        """, unsafe_allow_html=True)
        
        # Configura√ß√£o da API Key
        with st.expander("üîë Configura√ß√£o da API", expanded=True):
            api_key = st.text_input(
                "OpenAI API Key",
                type="password",
                value=st.session_state.get("api_key", ""),
                help="Obtenha sua chave em platform.openai.com",
                placeholder="sk-..."
            )
            st.session_state.api_key = api_key or None
            
            if api_key:
                st.success("‚úÖ API Key configurada!")
            else:
                st.warning("‚ö†Ô∏è API Key necess√°ria")
        
        # Configura√ß√µes do ebook
        with st.expander("üìñ Configura√ß√µes do Ebook", expanded=True):
            # Tipo de livro
            book_type = st.selectbox(
                "Tipo de Livro",
                ["üìà Neg√≥cios", "üõ†Ô∏è T√©cnico", "üí° Autoajuda", "üéì Educacional", "üìù Narrativo"],
                index=0,
                help="Selecione o tipo de ebook para otimiza√ß√£o"
            )
            
            # Estilo de escrita
            style_options = {
                "üìà Neg√≥cios": ["Executivo", "Estrat√©gico", "Pr√°tico", "Anal√≠tico"],
                "üõ†Ô∏è T√©cnico": ["Did√°tico", "Profissional", "Detalhado", "Cient√≠fico"],
                "üí° Autoajuda": ["Inspiracional", "Motivacional", "Emp√°tico", "Transformador"],
                "üéì Educacional": ["Did√°tico", "Claro", "Estruturado", "Progressivo"],
                "üìù Narrativo": ["Envolvente", "Descritivo", "Criativo", "Emocional"]
            }
            
            ebook_style = st.selectbox(
                "Estilo de Escrita",
                style_options[book_type],
                help="Tom e abordagem do conte√∫do"
            )
            
            # Tamanho do ebook (at√© 200 p√°ginas)
            ebook_pages = st.slider(
                "üìÑ N√∫mero de P√°ginas",
                min_value=10,
                max_value=200,
                value=50,
                step=10,
                help="Tamanho aproximado do ebook"
            )
            
            # Estimativa de palavras
            estimated_words = ebook_pages * 400  # ~400 palavras por p√°gina para ebooks
            st.info(f"üìä Estimativa: ~{estimated_words:,} palavras")
            
            # Idioma
            language = st.selectbox(
                "üåç Idioma",
                ["üáßüá∑ Portugu√™s", "üá∫üá∏ Ingl√™s", "üá™üá∏ Espanhol", "üá´üá∑ Franc√™s"],
                index=0
            )
        
        # Op√ß√µes de formato
        with st.expander("üíæ Formato de Sa√≠da"):
            output_format = st.radio(
                "Escolha o formato:",
                ["üìÑ PDF", "üìù Markdown", "üåê HTML", "üìä EPUB"],
                index=0,
                horizontal=False
            )
            
            include_images = st.checkbox(
                "üñºÔ∏è Incluir sugest√µes de imagens",
                value=True,
                help="Adiciona descri√ß√µes de imagens relevantes"
            )
            
            include_exercises = st.checkbox(
                "‚úèÔ∏è Incluir exerc√≠cios pr√°ticos",
                value=True,
                help="Adiciona atividades e reflex√µes"
            )
        
        # Estat√≠sticas da sess√£o
        st.markdown("---")
        st.markdown("### üìä Estat√≠sticas")
        
        col1, col2 = st.columns(2)
        with col1:
            st.metric(
                "Ebooks Gerados",
                st.session_state.get("ebooks_generated", 0),
                delta=None
            )
        with col2:
            st.metric(
                "P√°ginas Totais",
                st.session_state.get("total_pages", 0),
                delta=None
            )
        
        return {
            "api_key": api_key,
            "book_type": book_type,
            "style": ebook_style,
            "pages": ebook_pages,
            "language": language,
            "format": output_format,
            "include_images": include_images,
            "include_exercises": include_exercises
        }

def create_main_form():
    """Cria o formul√°rio principal"""
    st.markdown('<div class="custom-card fade-in">', unsafe_allow_html=True)
    
    with st.form("ebook_form", clear_on_submit=False):
        # T√≠tulo do t√≥pico
        st.markdown("### üí≠ Sobre o que ser√° seu ebook?")
        ebook_topic = st.text_area(
            "",
            placeholder="üìù Exemplo:\n‚Ä¢ Intelig√™ncia Artificial para Iniciantes\n‚Ä¢ Marketing Digital para Pequenas Empresas\n‚Ä¢ Guia Completo de Investimentos\n‚Ä¢ Hist√≥ria do Brasil Contempor√¢neo",
            height=120,
            help="Seja espec√≠fico sobre o tema principal"
        )
        
        # Op√ß√µes avan√ßadas
        with st.expander("üéØ Op√ß√µes Avan√ßadas", expanded=False):
            col1, col2 = st.columns(2)
            
            with col1:
                target_audience = st.text_input(
                    "üë• P√∫blico-alvo",
                    value="Adultos interessados no tema",
                    help="Ex: Profissionais de TI, Estudantes, Empreendedores"
                )
                
                difficulty_level = st.selectbox(
                    "üìä N√≠vel de Dificuldade",
                    ["Iniciante", "Intermedi√°rio", "Avan√ßado", "Especialista"],
                    index=1
                )
            
            with col2:
                tone = st.selectbox(
                    "üé≠ Tom do Conte√∫do",
                    ["Formal", "Conversacional", "T√©cnico", "Inspiracional"],
                    index=1
                )
                
                focus_area = st.selectbox(
                    "üéØ Foco Principal",
                    ["Te√≥rico", "Pr√°tico", "Balanceado", "Case Studies"],
                    index=2
                )
            
            key_points = st.text_area(
                "üìã Pontos-chave para incluir",
                placeholder="‚Ä¢ Conceitos fundamentais\n‚Ä¢ Exemplos pr√°ticos\n‚Ä¢ Dicas de implementa√ß√£o\n‚Ä¢ Erros comuns a evitar",
                height=100,
                help="Liste os principais t√≥picos que devem ser abordados"
            )
            
            special_requirements = st.text_area(
                "‚≠ê Requisitos Especiais",
                placeholder="‚Ä¢ Incluir estat√≠sticas atuais\n‚Ä¢ Focar em mercado brasileiro\n‚Ä¢ Adicionar templates\n‚Ä¢ Casos de sucesso reais",
                height=80,
                help="Requisitos espec√≠ficos ou prefer√™ncias especiais"
            )
        
        # Bot√£o de gera√ß√£o
        st.markdown("<br>", unsafe_allow_html=True)
        submit_button = st.form_submit_button(
            "‚ú® Gerar Ebook Profissional",
            use_container_width=True
        )
    
    st.markdown('</div>', unsafe_allow_html=True)
    
    return {
        "topic": ebook_topic,
        "audience": target_audience,
        "difficulty": difficulty_level,
        "tone": tone,
        "focus": focus_area,
        "key_points": key_points,
        "special_requirements": special_requirements,
        "submit": submit_button
    }

def generate_comprehensive_ebook(llm, topic, config, form_data):
    """Gera um ebook completo usando m√∫ltiplas chamadas para conte√∫do extenso"""
    
    # 1. Gerar estrutura detalhada do ebook
    outline_prompt = f"""
    Crie uma estrutura DETALHADA para um ebook de {config['pages']} p√°ginas sobre:
    TEMA: {topic}
    
    ESPECIFICA√á√ïES:
    - Tipo: {config['book_type']}
    - Estilo: {config['style']}
    - P√∫blico: {form_data['audience']}
    - N√≠vel: {form_data['difficulty']}
    - Tom: {form_data['tone']}
    - Foco: {form_data['focus']}
    
    ESTRUTURA REQUERIDA:
    1. T√≠tulo principal e subt√≠tulo
    2. √çndice completo com pelo menos 8-12 cap√≠tulos
    3. Para cada cap√≠tulo: nome, objetivo, subt√≥picos (3-5 por cap√≠tulo)
    4. Estimativa de palavras por cap√≠tulo
    5. Elementos especiais (caixas de texto, exerc√≠cios, exemplos)
    
    FORMATO DE RESPOSTA:
    # T√çTULO: [T√≠tulo principal]
    ## SUBT√çTULO: [Subt√≠tulo explicativo]
    
    ## √çNDICE DETALHADO:
    
    **Introdu√ß√£o** (800 palavras)
    - Apresenta√ß√£o do tema
    - Import√¢ncia do assunto
    - O que o leitor aprender√°
    
    **Cap√≠tulo 1: [Nome]** (1200 palavras)
    - Subt√≥pico 1.1: [nome]
    - Subt√≥pico 1.2: [nome]
    - Subt√≥pico 1.3: [nome]
    - Exemplo pr√°tico
    - Exerc√≠cio
    
    [Continue para todos os cap√≠tulos]
    
    **Conclus√£o** (600 palavras)
    - Resumo dos pontos principais
    - Pr√≥ximos passos
    - Recursos adicionais
    
    **Ap√™ndices** (400 palavras)
    - Gloss√°rio
    - Recursos extras
    - Bibliografia
    
    TOTAL ESTIMADO: {config['pages'] * 400} palavras
    """
    
    try:
        st.info("üìã Gerando estrutura detalhada do ebook...")
        outline = llm(outline_prompt)
        st.success("‚úÖ Estrutura criada!")
        
        # Mostrar estrutura para o usu√°rio
        with st.expander("üìã Estrutura do Ebook", expanded=False):
            st.markdown(outline)
        
    except Exception as e:
        st.error(f"Erro na gera√ß√£o da estrutura: {str(e)}")
        return None
    
    # 2. Gerar introdu√ß√£o
    intro_prompt = f"""
    Com base na seguinte estrutura de ebook:
    
    {outline}
    
    Escreva uma INTRODU√á√ÉO COMPLETA E DETALHADA de pelo menos 800 palavras.
    
    A introdu√ß√£o deve:
    1. Apresentar o tema de forma cativante
    2. Explicar a import√¢ncia e relev√¢ncia do assunto
    3. Apresentar os benef√≠cios que o leitor obter√°
    4. Dar uma vis√£o geral do que ser√° abordado
    5. Estabelecer conex√£o com o p√∫blico-alvo: {form_data['audience']}
    6. Usar tom {form_data['tone']} e estilo {config['style']}
    
    Inclua pelo menos 3 par√°grafos substanciais com exemplos ou estat√≠sticas quando relevante.
    """
    
    try:
        st.info("‚úçÔ∏è Escrevendo introdu√ß√£o...")
        introduction = llm(intro_prompt)
        st.success("‚úÖ Introdu√ß√£o conclu√≠da!")
    except Exception as e:
        st.error(f"Erro na introdu√ß√£o: {str(e)}")
        introduction = f"# Introdu√ß√£o\n\nBem-vindo ao nosso ebook sobre {topic}..."
    
    # 3. Gerar cap√≠tulos principais (em lotes)
    chapters = []
    chapter_count = min(8, max(6, config['pages'] // 8))  # Entre 6-8 cap√≠tulos
    
    for i in range(1, chapter_count + 1):
        chapter_prompt = f"""
        Com base na estrutura do ebook sobre "{topic}":
        
        {outline}
        
        Escreva o CAP√çTULO {i} COMPLETO com pelo menos 1200-1500 palavras.
        
        REQUISITOS:
        1. Siga a estrutura definida no √≠ndice
        2. Desenvolva todos os subt√≥picos indicados
        3. Use estilo {config['style']} e tom {form_data['tone']}
        4. Inclua exemplos pr√°ticos e detalhados
        5. Adicione pelo menos uma caixa de destaque ou dica
        6. Termine com um resumo do cap√≠tulo
        7. Foque no p√∫blico: {form_data['audience']}
        8. N√≠vel: {form_data['difficulty']}
        
        {f"PONTOS IMPORTANTES A INCLUIR: {form_data['key_points']}" if form_data['key_points'] else ""}
        {f"REQUISITOS ESPECIAIS: {form_data['special_requirements']}" if form_data['special_requirements'] else ""}
        
        ESTRUTURA DO CAP√çTULO:
        # Cap√≠tulo {i}: [T√≠tulo]
        
        ## Introdu√ß√£o do Cap√≠tulo
        [2-3 par√°grafos introdut√≥rios]
        
        ## [Subt√≥pico 1]
        [Desenvolvimento detalhado com exemplos]
        
        ## [Subt√≥pico 2]
        [Desenvolvimento detalhado com exemplos]
        
        ## [Subt√≥pico 3]
        [Desenvolvimento detalhado com exemplos]
        
        ## üí° Dica Especial / Caixa de Destaque
        [Conte√∫do relevante e pr√°tico]
        
        ## Exemplo Pr√°tico
        [Caso real ou simulado detalhado]
        
        ## Resumo do Cap√≠tulo
        [Pontos principais em 2-3 par√°grafos]
        
        ## ‚úèÔ∏è Exerc√≠cio / Reflex√£o
        [Atividade pr√°tica para o leitor]
        """
        
        try:
            st.info(f"‚úçÔ∏è Escrevendo Cap√≠tulo {i}...")
            progress = st.progress((i-1) / chapter_count)
            
            chapter = llm(chapter_prompt)
            chapters.append(chapter)
            
            progress.progress(i / chapter_count)
            st.success(f"‚úÖ Cap√≠tulo {i} conclu√≠do!")
            
            # Pequena pausa para evitar rate limiting
            time.sleep(2)
            
        except Exception as e:
            st.error(f"Erro no Cap√≠tulo {i}: {str(e)}")
            chapters.append(f"# Cap√≠tulo {i}: Em Desenvolvimento\n\nEste cap√≠tulo ser√° desenvolvido...")
    
    # 4. Gerar conclus√£o
    conclusion_prompt = f"""
    Com base no ebook completo sobre "{topic}" com a seguinte estrutura:
    
    {outline}
    
    E considerando os cap√≠tulos desenvolvidos, escreva uma CONCLUS√ÉO COMPLETA de pelo menos 600-800 palavras.
    
    A conclus√£o deve:
    1. Resumir os principais pontos abordados no ebook
    2. Refor√ßar os benef√≠cios e aprendizados
    3. Motivar o leitor √† a√ß√£o
    4. Sugerir pr√≥ximos passos pr√°ticos
    5. Incluir recursos adicionais para aprofundamento
    6. Terminar com uma mensagem inspiradora
    7. Manter tom {form_data['tone']} e estilo {config['style']}
    
    ESTRUTURA:
    # Conclus√£o
    
    ## Recapitulando Nossa Jornada
    [Resumo dos principais pontos]
    
    ## Seus Pr√≥ximos Passos
    [A√ß√µes pr√°ticas e recomenda√ß√µes]
    
    ## Recursos Adicionais
    [Sugest√µes de livros, sites, cursos]
    
    ## Palavras Finais
    [Mensagem motivacional e inspiradora]
    """
    
    try:
        st.info("üéØ Finalizando com conclus√£o...")
        conclusion = llm(conclusion_prompt)
        st.success("‚úÖ Conclus√£o conclu√≠da!")
    except Exception as e:
        st.error(f"Erro na conclus√£o: {str(e)}")
        conclusion = f"# Conclus√£o\n\nEste ebook sobre {topic} apresentou conceitos fundamentais..."
    
    # 5. Montar ebook completo
    full_ebook = f"""# {topic}
*Um Guia Completo e Pr√°tico*

---

## Sobre Este Ebook

Este ebook foi desenvolvido especificamente para {form_data['audience']}, abordando {topic} de forma {form_data['difficulty'].lower()} e com foco {form_data['focus'].lower()}.

**P√°ginas:** {config['pages']}
**Estilo:** {config['style']}
**Tom:** {form_data['tone']}

---

{introduction}

---

"""
    
    # Adicionar todos os cap√≠tulos
    for i, chapter in enumerate(chapters, 1):
        full_ebook += f"{chapter}\n\n---\n\n"
    
    # Adicionar conclus√£o
    full_ebook += f"{conclusion}\n\n---\n\n"
    
    # Adicionar ap√™ndices se solicitado
    if config.get('include_exercises') or config.get('include_images'):
        appendix_prompt = f"""
        Crie ap√™ndices complementares para o ebook sobre "{topic}":
        
        1. **Gloss√°rio:** 15-20 termos importantes com defini√ß√µes
        2. **Recursos Adicionais:** Lista de livros, sites, ferramentas recomendadas
        3. **Templates/Checklists:** Materiais pr√°ticos para aplica√ß√£o
        4. {"**Sugest√µes de Imagens:** Descri√ß√µes de imagens relevantes para cada cap√≠tulo" if config.get('include_images') else ""}
        5. {"**Exerc√≠cios Extras:** Atividades complementares de aprofundamento" if config.get('include_exercises') else ""}
        
        Mantenha o mesmo tom {form_data['tone']} e seja pr√°tico e √∫til.
        """
        
        try:
            st.info("üìö Adicionando ap√™ndices e recursos extras...")
            appendices = llm(appendix_prompt)
            full_ebook += f"{appendices}\n\n"
            st.success("‚úÖ Ap√™ndices adicionados!")
        except Exception as e:
            st.warning(f"Ap√™ndices n√£o puderam ser gerados: {str(e)}")
    
    # Adicionar footer
    full_ebook += f"""---

## Sobre o Autor

Este ebook foi gerado com intelig√™ncia artificial para fornecer conte√∫do educativo e pr√°tico sobre {topic}.

**Data de cria√ß√£o:** {datetime.now().strftime('%d/%m/%Y')}
**Vers√£o:** 1.0
**Palavras:** ~{len(full_ebook.split()):,}

---

*Obrigado por ler este ebook! Esperamos que o conte√∫do seja √∫til em sua jornada de aprendizado.*
"""
    
    return full_ebook

def create_example_section():
    """Cria se√ß√£o com exemplos e dicas"""
    st.markdown("""
    <div class="glass-card fade-in">
        <h3 style="color: #667eea; margin-bottom: 20px;">üí° Exemplos de Temas Populares</h3>
    </div>
    """, unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("""
        <div class="feature-card">
            <h4>üìà Neg√≥cios & Empreendedorismo</h4>
            <ul>
                <li>Marketing Digital para PMEs</li>
                <li>Gest√£o de Equipes Remotas</li>
                <li>Estrat√©gias de Vendas B2B</li>
                <li>Planejamento Financeiro Empresarial</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="feature-card">
            <h4>üõ†Ô∏è Tecnologia & Desenvolvimento</h4>
            <ul>
                <li>Introdu√ß√£o √† Programa√ß√£o Python</li>
                <li>Desenvolvimento de Apps Mobile</li>
                <li>Intelig√™ncia Artificial Aplicada</li>
                <li>Seguran√ßa em Sistemas Web</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="feature-card">
            <h4>üí° Desenvolvimento Pessoal</h4>
            <ul>
                <li>Produtividade e Gest√£o do Tempo</li>
                <li>Comunica√ß√£o Eficaz</li>
                <li>Lideran√ßa e Influ√™ncia</li>
                <li>Mindfulness e Bem-estar</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)
        
        st.markdown("""
        <div class="feature-card">
            <h4>üéì Educa√ß√£o & Conhecimento</h4>
            <ul>
                <li>Hist√≥ria Mundial Contempor√¢nea</li>
                <li>Ci√™ncias para Leigos</li>
                <li>Filosofia Aplicada ao Cotidiano</li>
                <li>Arte e Cultura Brasileira</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)

def create_tips_section():
    """Cria se√ß√£o com dicas"""
    st.markdown("""
    <div class="glass-card fade-in">
        <h3 style="color: #667eea; margin-bottom: 20px;">üéØ Dicas para Resultados Excepcionais</h3>
    </div>
    """, unsafe_allow_html=True)
    
    tips = [
        ("üéØ", "Seja Espec√≠fico", "Quanto mais detalhado o t√≥pico, melhor o resultado final"),
        ("üë•", "Conhe√ßa seu P√∫blico", "Defina claramente quem s√£o seus leitores ideais"),
        ("üìä", "Use Dados Reais", "Mencione se precisa de estat√≠sticas ou pesquisas atuais"),
        ("üíº", "Inclua Casos Pr√°ticos", "Solicite exemplos reais e estudos de caso"),
        ("üîÑ", "Itera√ß√£o √© Chave", "Use as op√ß√µes avan√ßadas para refinar o conte√∫do"),
        ("üì±", "Pense Mobile", "Considere como o conte√∫do ser√° consumido pelos leitores")
    ]
    
    for icon, title, description in tips:
        st.markdown(f"""
        <div class="feature-card">
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
                <span style="font-size: 1.5em; margin-right: 15px;">{icon}</span>
                <strong style="color: #667eea;">{title}</strong>
            </div>
            <p style="margin: 0; color: #8b92a5;">{description}</p>
        </div>
        """, unsafe_allow_html=True)

def display_generation_progress(total_steps):
    """Exibe progresso da gera√ß√£o com anima√ß√£o"""
    progress_steps = [
        ("üîç", "Analisando o t√≥pico..."),
        ("üìã", "Criando estrutura detalhada..."),
        ("üìù", "Escrevendo introdu√ß√£o..."),
        ("‚úçÔ∏è", "Gerando cap√≠tulos principais..."),
        ("üéØ", "Desenvolvendo conclus√£o..."),
        ("üìö", "Adicionando ap√™ndices..."),
        ("üé®", "Formatando documento..."),
        ("‚úÖ", "Ebook conclu√≠do!")
    ]
    
    progress_bar = st.progress(0)
    status_text = st.empty()
    
    return progress_bar, status_text, progress_steps

def display_results(ebook_content, config, form_data):
    """Exibe os resultados da gera√ß√£o"""
    # Atualizar estat√≠sticas
    st.session_state.ebooks_generated = st.session_state.get("ebooks_generated", 0) + 1
    st.session_state.total_pages = st.session_state.get("total_pages", 0) + config["pages"]
    
    # Mensagem de sucesso
    st.markdown("""
    <div class="glass-card fade-in" style="text-align: center;">
        <h2 style="color: #10b981; margin-bottom: 20px;">üéâ Ebook Gerado com Sucesso!</h2>
        <p style="color: #8b92a5;">Seu ebook profissional est√° pronto para download e visualiza√ß√£o.</p>
    </div>
    """, unsafe_allow_html=True)
    
    # M√©tricas do ebook gerado
    col1, col2, col3, col4 = st.columns(4)
    
    word_count = len(ebook_content.split())
    char_count = len(ebook_content)
    estimated_reading_time = max(1, word_count // 200)  # ~200 palavras por minuto
    
    with col1:
        st.markdown(f"""
        <div class="metric-card">
            <div class="metric-value">{config["pages"]}</div>
            <div class="metric-label">P√°ginas</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown(f"""
        <div class="metric-card">
            <div class="metric-value">{word_count:,}</div>
            <div class="metric-label">Palavras</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown(f"""
        <div class="metric-card">
            <div class="metric-value">{estimated_reading_time}</div>
            <div class="metric-label">Min. Leitura</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        st.markdown(f"""
        <div class="metric-card">
            <div class="metric-value">{config["format"].split()[1]}</div>
            <div class="metric-label">Formato</div>
        </div>
        """, unsafe_allow_html=True)
    
    # Tabs para visualiza√ß√£o e download
    tab1, tab2, tab3 = st.tabs(["üìñ Visualizar", "‚¨áÔ∏è Download", "üìä Detalhes"])
    
    with tab1:
        st.markdown('<div class="custom-card">', unsafe_allow_html=True)
        st.markdown(ebook_content)
        st.markdown('</div>', unsafe_allow_html=True)
    
    with tab2:
        col1, col2 = st.columns([2, 1])
        
        with col1:
            # Preparar arquivo para download
            try:
                filename = f"ebook_{form_data['topic'][:30].replace(' ', '_')}_{datetime.now().strftime('%Y%m%d_%H%M')}"
                file_extension = config["format"].lower().split()[1]
                
                # Diferentes tipos de arquivo
                if file_extension == "markdown":
                    file_data = ebook_content.encode('utf-8')
                    mime_type = "text/markdown"
                elif file_extension == "html":
                    html_content = f"""
                    <!DOCTYPE html>
                    <html lang="pt-BR">
                    <head>
                        <meta charset="UTF-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <title>{form_data['topic']}</title>
                        <style>
                            body {{ font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; padding: 20px; }}
                            h1, h2, h3 {{ color: #333; }}
                            h1 {{ border-bottom: 3px solid #667eea; padding-bottom: 10px; }}
                            h2 {{ border-bottom: 1px solid #ddd; padding-bottom: 5px; }}
                            .highlight {{ background: #f0f8ff; padding: 15px; border-left: 4px solid #667eea; margin: 20px 0; }}
                            code {{ background: #f4f4f4; padding: 2px 5px; border-radius: 3px; }}
                            blockquote {{ background: #f9f9f9; border-left: 4px solid #ddd; margin: 0; padding: 10px 20px; }}
                        </style>
                    </head>
                    <body>
                    {ebook_content.replace('#', '<h1>').replace('##', '<h2>').replace('###', '<h3>')}
                    </body>
                    </html>
                    """
                    file_data = html_content.encode('utf-8')
                    mime_type = "text/html"
                else:
                    file_data = ebook_content.encode('utf-8')
                    mime_type = "text/plain"
                
                st.download_button(
                    label=f"üì• Baixar Ebook ({config['format']})",
                    data=file_data,
                    file_name=f"{filename}.{file_extension}",
                    mime=mime_type,
                    use_container_width=True
                )
                
                st.success(f"‚úÖ Pronto para download: {filename}.{file_extension}")
                
            except Exception as e:
                st.error(f"‚ùå Erro ao preparar download: {str(e)}")
                
                # Fallback: oferecer download direto do texto
                st.download_button(
                    label="üìù Baixar como Texto",
                    data=ebook_content.encode('utf-8'),
                    file_name=f"ebook_{datetime.now().strftime('%Y%m%d_%H%M')}.txt",
                    mime="text/plain",
                    use_container_width=True
                )
        
        with col2:
            st.info("""
            **üìã Formatos Dispon√≠veis:**
            
            ‚Ä¢ **PDF**: Melhor para leitura
            ‚Ä¢ **Markdown**: Edit√°vel 
            ‚Ä¢ **HTML**: Web-friendly
            ‚Ä¢ **EPUB**: E-readers
            
            üìä **Qualidade:**
            ‚úÖ Estrutura profissional
            ‚úÖ Conte√∫do extenso
            ‚úÖ Formata√ß√£o adequada
            ‚úÖ Pronto para publica√ß√£o
            """)
    
    with tab3:
        st.markdown("### üìä Informa√ß√µes Detalhadas")
        
        details = {
            "üéØ T√≥pico": form_data["topic"],
            "üìö Tipo de Livro": config["book_type"],
            "‚úçÔ∏è Estilo": config["style"],
            "üë• P√∫blico-alvo": form_data["audience"],
            "üìä N√≠vel": form_data["difficulty"],
            "üé≠ Tom": form_data["tone"],
            "üéØ Foco": form_data["focus"],
            "üåç Idioma": config["language"],
            "üíæ Formato": config["format"],
            "üìÑ P√°ginas": config["pages"],
            "üìù Palavras": f"{word_count:,}",
            "üìñ Caracteres": f"{char_count:,}",
            "‚è±Ô∏è Tempo de Leitura": f"{estimated_reading_time} minutos",
            "üìÖ Gerado em": datetime.now().strftime("%d/%m/%Y √†s %H:%M")
        }
        
        for key, value in details.items():
            st.markdown(f"**{key}:** {value}")
        
        # Mostrar estrutura se solicitado
        if st.button("üìã Ver An√°lise de Estrutura"):
            chapters = ebook_content.count("# Cap√≠tulo")
            sections = ebook_content.count("## ")
            subsections = ebook_content.count("### ")
            
            st.markdown(f"""
            **üìä An√°lise Estrutural:**
            - Cap√≠tulos identificados: {chapters}
            - Se√ß√µes principais: {sections}
            - Subse√ß√µes: {subsections}
            - Densidade: {word_count // max(1, chapters)} palavras/cap√≠tulo
            - Profundidade: {'Alta' if subsections > sections else 'M√©dia' if sections > 5 else 'B√°sica'}
            """)

def main():
    """Fun√ß√£o principal da aplica√ß√£o"""
    # Configura√ß√£o da p√°gina
    st.set_page_config(
        page_title="üìö EBook Generator Pro",
        page_icon="üìö",
        layout="wide",
        initial_sidebar_state="expanded",
        menu_items={
            'Get Help': 'https://github.com/seu-usuario/ebook-generator',
            'Report a bug': "https://github.com/seu-usuario/ebook-generator/issues",
            'About': "# EBook Generator Pro\nGerador profissional de ebooks com IA"
        }
    )
    
    # Aplicar tema escuro
    apply_dark_theme()
    
    # Inicializar session state
    if "ebooks_generated" not in st.session_state:
        st.session_state.ebooks_generated = 0
    if "total_pages" not in st.session_state:
        st.session_state.total_pages = 0
    
    # Header principal
    create_header()
    
    # Layout principal
    # Sidebar com configura√ß√µes
    config = create_sidebar()
    
    # Conte√∫do principal
    col1, col2 = st.columns([2, 1])
    
    with col1:
        # Formul√°rio principal
        form_data = create_main_form()
        
        # Processamento da gera√ß√£o
        if form_data["submit"] and form_data["topic"]:
            if not config["api_key"]:
                st.error("‚ö†Ô∏è Por favor, configure sua OpenAI API Key na barra lateral")
                st.stop()
            
            # Valida√ß√£o b√°sica do t√≥pico
            if len(form_data["topic"].strip()) < 10:
                st.warning("‚ö†Ô∏è Por favor, forne√ßa uma descri√ß√£o mais detalhada do t√≥pico (m√≠nimo 10 caracteres)")
                st.stop()
            
            try:
                # Container para o progresso
                with st.container():
                    st.markdown("""
                    <div class="glass-card fade-in">
                        <h3 style="color: #667eea; text-align: center;">üöÄ Gerando seu Ebook Completo...</h3>
                        <p style="text-align: center; color: #8b92a5;">Este processo pode levar alguns minutos para garantir qualidade m√°xima</p>
                    </div>
                    """, unsafe_allow_html=True)
                    
                    # Configurar LLM com par√¢metros para conte√∫do extenso
                    try:
                        llm = OpenAI(
                            openai_api_key=config["api_key"],
                            temperature=0.7,
                            max_tokens=20000,  # Aumentado para mais conte√∫do
                            request_timeout=180  # 3 minutos de timeout
                        )
                        st.success("‚úÖ Sistema de IA configurado!")
                    except Exception as e:
                        st.error(f"‚ùå Erro na configura√ß√£o da API OpenAI: {str(e)}")
                        st.error("üîë Verifique se sua API Key est√° correta e v√°lida")
                        st.stop()
                    
                    # Gerar ebook usando o novo sistema
                    try:
                        ebook_content = generate_comprehensive_ebook(
                            llm=llm,
                            topic=form_data["topic"],
                            config=config,
                            form_data=form_data
                        )
                        
                        # Verificar se o conte√∫do foi gerado com sucesso
                        if not ebook_content or len(ebook_content.strip()) < 1000:
                            st.error("‚ùå Conte√∫do gerado √© muito curto")
                            st.error("üìù Tente novamente ou reduza o n√∫mero de p√°ginas")
                            st.stop()
                        
                        # Mostrar estat√≠sticas finais
                        final_word_count = len(ebook_content.split())
                        st.success(f"üéâ Ebook gerado com sucesso! ({final_word_count:,} palavras)")
                        
                    except Exception as e:
                        st.error(f"‚ùå Erro durante a gera√ß√£o do ebook: {str(e)}")
                        
                        # Mostrar detalhes do erro em modo debug
                        with st.expander("üîç Detalhes do Erro (Debug)", expanded=False):
                            st.code(traceback.format_exc())
                        
                        st.error("üîÑ Sugest√µes para resolver:")
                        st.error("‚Ä¢ Verifique sua conex√£o com a internet")
                        st.error("‚Ä¢ Tente reduzir o n√∫mero de p√°ginas")
                        st.error("‚Ä¢ Simplifique a descri√ß√£o do t√≥pico")
                        st.error("‚Ä¢ Verifique se sua API Key tem cr√©ditos suficientes")
                        st.stop()
                    
                    # Exibir resultados
                    display_results(ebook_content, config, form_data)
                    
            except Exception as e:
                st.error(f"‚ùå Erro cr√≠tico na aplica√ß√£o: {str(e)}")
                
                # Debug completo
                with st.expander("üêõ Debug Completo", expanded=False):
                    st.code(traceback.format_exc())
                
                # Sugest√µes de solu√ß√£o
                st.markdown("""
                <div class="glass-card">
                    <h4 style="color: #ef4444;">üîß Poss√≠veis Solu√ß√µes:</h4>
                    <ul>
                        <li><strong>API Key:</strong> Verifique se sua chave OpenAI est√° correta e tem cr√©ditos</li>
                        <li><strong>Conectividade:</strong> Teste sua conex√£o com a internet</li>
                        <li><strong>Par√¢metros:</strong> Tente simplificar as configura√ß√µes do ebook</li>
                        <li><strong>T√≥pico:</strong> Use uma descri√ß√£o mais clara e espec√≠fica</li>
                        <li><strong>Reiniciar:</strong> Recarregue a p√°gina e tente novamente</li>
                    </ul>
                </div>
                """, unsafe_allow_html=True)
        
        elif form_data["submit"] and not form_data["topic"]:
            st.warning("üìù Por favor, descreva o tema do seu ebook antes de continuar.")
    
    with col2:
        # Se√ß√£o de exemplos
        create_example_section()
        
        # Se√ß√£o de dicas
        create_tips_section()
        
        # Se√ß√£o de recursos
        st.markdown("""
        <div class="glass-card fade-in">
            <h3 style="color: #667eea; margin-bottom: 20px;">üéÅ Recursos Inclusos</h3>
            <div class="feature-card">
                <h4>‚ú® Conte√∫do Extenso</h4>
                <p style="color: #8b92a5;">Ebooks de 10-200 p√°ginas com conte√∫do rico e detalhado.</p>
            </div>
            <div class="feature-card">
                <h4>üìã Estrutura Profissional</h4>
                <p style="color: #8b92a5;">Introdu√ß√£o, m√∫ltiplos cap√≠tulos, conclus√£o e ap√™ndices.</p>
            </div>
            <div class="feature-card">
                <h4>üñºÔ∏è Sugest√µes Visuais</h4>
                <p style="color: #8b92a5;">Descri√ß√µes de imagens e gr√°ficos para enriquecer seu ebook.</p>
            </div>
            <div class="feature-card">
                <h4>üìö Exerc√≠cios Pr√°ticos</h4>
                <p style="color: #8b92a5;">Atividades e reflex√µes para engajar seus leitores.</p>
            </div>
            <div class="feature-card">
                <h4>üìÑ M√∫ltiplos Formatos</h4>
                <p style="color: #8b92a5;">Markdown, HTML e texto puro para m√°xima compatibilidade.</p>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        # Se√ß√£o de performance
        st.markdown("""
        <div class="glass-card fade-in">
            <h3 style="color: #667eea; margin-bottom: 20px;">‚ö° Performance Melhorada</h3>
            <div class="feature-card">
                <h4>üöÄ Sistema Otimizado</h4>
                <p style="color: #8b92a5;">Gera√ß√£o em m√∫ltiplas etapas para conte√∫do mais extenso e detalhado.</p>
            </div>
            <div class="feature-card">
                <h4>üìä Controle de Qualidade</h4>
                <p style="color: #8b92a5;">Valida√ß√£o autom√°tica de estrutura e tamanho do conte√∫do.</p>
            </div>
            <div class="feature-card">
                <h4>üîß Recupera√ß√£o de Erros</h4>
                <p style="color: #8b92a5;">Sistema robusto que continua funcionando mesmo com falhas parciais.</p>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        # Se√ß√£o de suporte
        st.markdown("""
        <div class="glass-card fade-in">
            <h3 style="color: #667eea; margin-bottom: 20px;">üí¨ Suporte & Ajuda</h3>
            <div style="text-align: center;">
                <p style="color: #8b92a5; margin-bottom: 20px;">Precisa de ajuda ou tem sugest√µes?</p>
                <div style="display: flex; justify-content: space-around; margin: 20px 0;">
                    <a href="mailto:suporte@ebookgenerator.com" style="color: #667eea; text-decoration: none;">
                        üìß Email
                    </a>
                    <a href="https://github.com/seu-usuario/ebook-generator" style="color: #667eea; text-decoration: none;">
                        üê± GitHub
                    </a>
                    <a href="https://discord.gg/seu-servidor" style="color: #667eea; text-decoration: none;">
                        üí¨ Discord
                    </a>
                </div>
            </div>
        </div>
        """, unsafe_allow_html=True)
    
    # Footer
    st.markdown("---")
    st.markdown("""
    <div style="text-align: center; padding: 20px 0; color: #8b92a5;">
        <p>üìö <strong>EBook Generator Pro</strong> - Powered by OpenAI GPT</p>
        <p style="font-size: 0.8em;">Vers√£o 2.1 | ¬© 2024 | Feito com ‚ù§Ô∏è para criadores de conte√∫do</p>
        <p style="font-size: 0.7em;">‚ú® Agora com gera√ß√£o de conte√∫do extenso e detalhado!</p>
    </div>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()